Description: >
    This is an example of a long running ECS service that responds to HTTP
    requests with a single word.

Parameters:

    VPC:
        Type: AWS::EC2::VPC::Id
    EnvironmentName:
        Type: String
    PrivateSubnets:
        Type: List<AWS::EC2::Subnet::Id>
    ECSServicesSecurityGroup:
        Type: AWS::EC2::SecurityGroup::Id
    DBURL:
        Type: String
    RailsSecretKeyBase:
        Type: String
        Default: 30f283aa65c8f1d73073812fedab59d3b46ba81a42c366f26dddefd3db7c6ec45c2ba32b432c375f583f4b13df533662256e6537671a25bc5a6013205a48a3aa
    TargetGroup:
        Type: String
    SSHTargetGroup:
        Type: String

Resources:

    Cluster:
        Type: AWS::ECS::Cluster
        Properties:
            ClusterName: !Ref EnvironmentName

    SSHService:
        Type: AWS::ECS::Service
        Properties:
            Cluster: !Ref Cluster
            LaunchType: FARGATE
            DesiredCount: 1
            DeploymentConfiguration:
                MaximumPercent: 100
                MinimumHealthyPercent: 0
            TaskDefinition: !Ref SSHTaskDefinition
            NetworkConfiguration:
                AwsvpcConfiguration:
                    Subnets: !Ref PrivateSubnets
                    AssignPublicIp: ENABLED
                    SecurityGroups:
                        - !Ref ECSServicesSecurityGroup
            LoadBalancers:
                - ContainerName: !Sub SSH-${EnvironmentName}
                  ContainerPort: 22
                  TargetGroupArn: !Ref SSHTargetGroup

    SSHTaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
            TaskRoleArn: !GetAtt TaskExecutionRole.Arn
            ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
            Cpu: 256
            Memory: 512
            Family: !Sub SSH-${EnvironmentName}
            NetworkMode: awsvpc
            RequiresCompatibilities:
                - FARGATE
            ContainerDefinitions:
                - Name: !Sub SSH-${EnvironmentName}
                  EntryPoint:
                      - "/bin/ash"
                      - "-c"
                  Command:
                      - "ssh-keygen -A && exec /usr/sbin/sshd -D -e"
                  Essential: true
                  Image: sickp/alpine-sshd:7.5
                  PortMappings:
                      - ContainerPort: 22

    Service:
        Type: AWS::ECS::Service
        Properties:
            Cluster: !Ref Cluster
            LaunchType: FARGATE
            DesiredCount: 2
            DeploymentConfiguration:
                MaximumPercent: 150
                MinimumHealthyPercent: 100
            TaskDefinition: !Ref TaskDefinition
            NetworkConfiguration:
                AwsvpcConfiguration:
                    Subnets: !Ref PrivateSubnets
                    AssignPublicIp: ENABLED
                    SecurityGroups:
                        - !Ref ECSServicesSecurityGroup
            LoadBalancers:
                - ContainerName: !Ref EnvironmentName
                  ContainerPort: 4444
                  TargetGroupArn: !Ref TargetGroup

    TaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
            TaskRoleArn: !GetAtt TaskExecutionRole.Arn
            ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
            Cpu: 256
            Memory: 512
            Family: !Ref EnvironmentName
            NetworkMode: awsvpc
            RequiresCompatibilities:
                - FARGATE
            ContainerDefinitions:
                - Name: !Ref EnvironmentName
                  Command:
                      - !Sub "rails db:migrate && rails assets:precompile && rails server -b 0.0.0.0"
                  Environment:
                      - Name: RAILS_SERVE_STATIC_FILES
                        Value: true
                      - Name: RAILS_LOG_TO_STDOUT
                        Value: true
                      - Name: RAILS_ENV
                        Value: production
                      - Name: PORT
                        Value: 4444
                      - Name: DATABASE_URL
                        Value: !Ref DBURL
                      - Name: SECRET_KEY_BASE
                        Value: !Ref RailsSecretKeyBase
                  Essential: true
                  Image: docker.io/laser/helloworld-http:latest
                  PortMappings:
                      - ContainerPort: 4444
                  LogConfiguration:
                      LogDriver: awslogs
                      Options:
                          awslogs-group: !Ref EnvironmentName
                          awslogs-region: !Ref AWS::Region
                          awslogs-stream-prefix: ecs

    LogGroup:
        Type: AWS::Logs::LogGroup
        Properties:
            LogGroupName: !Ref EnvironmentName
            RetentionInDays: 365

    TaskExecutionRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                - Effect: Allow
                  Principal:
                      Service:
                      - ecs-tasks.amazonaws.com
                  Action:
                  - sts:AssumeRole
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

Outputs:

    EcsServiceArn:
        Description: A reference to the created ECS service ARN
        Value: !Ref Service

    SshEcsServiceArn:
        Description: A reference to the created ECS service ARN (for SSH)
        Value: !Ref SSHService

    EcsClusterName:
        Description: A reference to the created ECS service ARN
        Value: !Ref Cluster

    EcsTaskExecutionRoleArn:
        Description: A reference to the created IAM role ARN
        Value: !Ref TaskExecutionRole
