Description: >

    This template deploys a VPC, with a pair of public and private subnets
    spread across two Availabilty Zones. It deploys an Internet Gateway, with a
    default route on the public subnets. It deploys a pair of NAT Gateways
    (one in each AZ), and default routes for them in the private subnets.

    It then deploys a "hello world" application highly available ECS cluster
    using Fargate containers.

    Finally, it deploys an  ECS services from containers published in Amazon EC2
    Container Registry (Amazon ECR).

Parameters:
    S3TemplateKeyPrefix:
        Description: >
            An S3 key prefix which will be used to resolve referenced templates
        Type: String

    DBMasterUsername:
        Description: The master username for our RDS instance
        Type: String
        Default: rinkydink

    DBMasterUserPassword:
        Description: The master password for our RDS instance
        Type: String
        Default: smurfmagnet

    DBInstanceClass:
        Description: Instance class for RDS instance
        Type: String
        Default: db.t2.micro

    DBEngine:
        Description: RDS instance-engine (e.g. postgres)
        Type: String
        Default: postgres

    DBEngineVersion:
        Description: RDS instance version number (e.g. 9.6.5)
        Type: String
        Default: 9.6.5

Resources:
    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub ${S3TemplateKeyPrefix}vpc.yml
            Parameters:
                EnvironmentName:    !Ref AWS::StackName
                VpcCIDR:            10.0.0.0/16
                PublicSubnet1CIDR:  10.0.10.0/24
                PublicSubnet2CIDR:  10.0.11.0/24
                PrivateSubnet1CIDR: 10.0.20.0/24
                PrivateSubnet2CIDR: 10.0.21.0/24

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub ${S3TemplateKeyPrefix}security-groups.yml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC

    ALB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub ${S3TemplateKeyPrefix}load-balancers.yml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC
                Subnets: !GetAtt VPC.Outputs.PublicSubnets
                SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

    Database:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub ${S3TemplateKeyPrefix}database.yml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                DBSecurityGroup: !GetAtt SecurityGroups.Outputs.RDSInstanceSecurityGroup
                DBMasterUsername: !Ref DBMasterUsername
                DBMasterUserPassword: !Ref DBMasterUserPassword
                DBSubnetGroupName: !GetAtt VPC.Outputs.DBSubnetGroup
                DBInstanceClass: !Ref DBInstanceClass
                DBEngineVersion: !Ref DBEngineVersion
                DBEngine: !Ref DBEngine

    EcsCluster:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub ${S3TemplateKeyPrefix}ecs-cluster.yml
            Parameters:
                Subnets: !GetAtt VPC.Outputs.PrivateSubnets
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC
                DesiredCount: 2
                Listener: !GetAtt ALB.Outputs.Listener
                ECSServicesSecurityGroup: !GetAtt SecurityGroups.Outputs.ECSServicesSecurityGroup
                DBURL: !GetAtt Database.Outputs.DBURL

Outputs:

    WebServiceLogGroupName:
        Description: The CloudWatch log group which contains our web service logs
        Value: !GetAtt EcsCluster.Outputs.WebServiceLogGroupName

    WebServiceUrl:
        Description: The URL of the load balancer
        Value: !GetAtt ALB.Outputs.LoadBalancerUrl

    WebServiceArn:
        Description: The ARN of the web service
        Value: !GetAtt EcsCluster.Outputs.EcsServiceArn

    WebServiceTaskExecutionRoleArn:
        Description: The ARN of the TaskExecutionRole used by ECS
        Value: !GetAtt EcsCluster.Outputs.EcsTaskExecutionRoleArn

    WebServiceTaskFamilyName:
        Description: The name of the task family with which we register web service tasks
        Value: !GetAtt EcsCluster.Outputs.WebServiceTaskFamilyName

    WebServiceContainerName:
        Description: The name of the container in which our web service runs
        Value: !GetAtt EcsCluster.Outputs.WebServiceContainerName

    PrivateSubnets:
        Description: A list of the private subnets
        Value: !GetAtt VPC.Outputs.PrivateSubnets

    ECSServicesSecurityGroup:
        Description: The security group attached to our ECS services
        Value: !GetAtt SecurityGroups.Outputs.ECSServicesSecurityGroup

    DBURL:
        Description: URL used to connect to the RDS instance
        Value: !GetAtt Database.Outputs.DBURL
