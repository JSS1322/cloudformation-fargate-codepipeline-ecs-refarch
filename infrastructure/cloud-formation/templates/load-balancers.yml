Description: >
    This template deploys an Application Load Balancer that exposes our various ECS services.

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VPC:
        Type: AWS::EC2::VPC::Id
        Description: Choose which VPC the Application Load Balancer should be deployed to

    PublicSubnets:
        Description: Choose which subnets the Application Load Balancer should be deployed to
        Type: List<AWS::EC2::Subnet::Id>

Resources:

    SSHLoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Type: network
            Scheme: internet-facing
            Name: !Sub SSH-${EnvironmentName}
            Subnets: !Ref PublicSubnets
            Tags:
                - Key: Name
                  Value: !Sub SSH-${EnvironmentName}

    SSHLoadBalancerListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            LoadBalancerArn: !Ref SSHLoadBalancer
            Port: 22
            Protocol: TCP
            DefaultActions:
                - Type: forward
                  TargetGroupArn: !Ref SSHTargetGroup

    SSHTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            Name: !Sub SSH-${EnvironmentName}
            VpcId: !Ref VPC
            Port: 22
            Protocol: TCP
            TargetType: ip
            TargetGroupAttributes:
                - Key: deregistration_delay.timeout_seconds
                  Value: '10'

    LoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Type: network
            Scheme: internet-facing
            Name: !Ref EnvironmentName
            Subnets: !Ref PublicSubnets
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

    LoadBalancerListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            LoadBalancerArn: !Ref LoadBalancer
            Port: 80
            Protocol: TCP
            DefaultActions:
                - Type: forward
                  TargetGroupArn: !Ref TargetGroup

    TargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            Name: !Sub ${EnvironmentName}-target-group
            VpcId: !Ref VPC
            Port: 4444
            Protocol: TCP
            TargetType: ip
            TargetGroupAttributes:
                - Key: deregistration_delay.timeout_seconds
                  Value: '10'

Outputs:

    LoadBalancerUrl:
        Description: The URL of the ALB
        Value: !GetAtt LoadBalancer.DNSName

    Listener:
        Description: A reference to a port 80 listener
        Value: !Ref LoadBalancerListener

    TargetGroup:
        Value: !Ref TargetGroup

    SSHLoadBalancerUrl:
        Description: The URL of the ALB
        Value: !GetAtt SSHLoadBalancer.DNSName

    SSHListener:
        Description: A reference to a port 80 listener
        Value: !Ref SSHLoadBalancerListener

    SSHTargetGroup:
        Value: !Ref SSHTargetGroup
