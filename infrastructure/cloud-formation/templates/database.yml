Description: >
    This stack provisions the RDS instance which will be used by our app.

Mappings:
    DBEngineToDBURLScheme:
        postgres:
            Value: postgresql
        mysql:
            Value: mysql

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    DBSecurityGroup:
        Description: Select the Security Group to apply to the RDS instance
        Type: AWS::EC2::SecurityGroup::Id

    DBMasterUsername:
        Description: The master user name for the DB instance.
        Type: String

    DBMasterUserPassword:
        Description: The master password for the DB instance.
        Type: String

    DBSubnetGroupName:
        Description: A DB subnet group to associate with the DB instance.
        Type: String

    DBInstanceClass:
        Description: Instance class for the RDS instance
        Type: String

    DBEngineVersion:
        Description: Engine version number (e.g. 9.6.5)
        Type: String

    DBEngine:
        Description: Database engine (e.g. postgres)
        Type: String
        AllowedValues:
            - postgres
            - mysql

Resources:

    Database:
        Type: AWS::RDS::DBInstance
        Properties:
            AllocatedStorage: 5
            AutoMinorVersionUpgrade: true
            BackupRetentionPeriod: 0
            DBInstanceClass: !Ref DBInstanceClass
            DBName: !Ref EnvironmentName
            VPCSecurityGroups:
                - !Ref DBSecurityGroup
            DBSubnetGroupName: !Ref DBSubnetGroupName
            Engine: !Ref DBEngine
            EngineVersion: !Ref DBEngineVersion
            MasterUsername: !Ref DBMasterUsername
            MasterUserPassword: !Ref DBMasterUserPassword
            MultiAZ: true

Outputs:

    DBHost:
      Description: A Postgres URL for our application to consume.
      Value: !GetAtt Database.Endpoint.Address

    DBName:
      Description: The database name
      Value: !Ref EnvironmentName

    DBPort:
      Description: The port at which the database is accessible
      Value: !GetAtt Database.Endpoint.Port

    DBURL:
      Description: A database connection string
      Value:
        Fn::Join:
            - ""
            - - !FindInMap [DBEngineToDBURLScheme, !Ref DBEngine, Value]
              - "://"
              - !Ref DBMasterUsername
              - ":"
              - !Ref DBMasterUserPassword
              - "@"
              - !GetAtt Database.Endpoint.Address
              - ":"
              - !GetAtt Database.Endpoint.Port
              - "/"
              - !Ref EnvironmentName
